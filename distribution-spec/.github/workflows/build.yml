name: build

on:
  push:
    branches:
      - main

jobs:
  run:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go: ['1.21', '1.22']

    steps:
      - name: checkout source code
        uses: actions/checkout@v4

      - name: setup go environment
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: run tests
        id: tests
        run: |
          export PATH="$(go env GOPATH)/bin:${PATH}"
          make install.tools
          make .gitvalidation
          make docs conformance

          set +e
          make registry-ci conformance-ci
          CONFORMANCE_RC="$?"
          set -e
          if [[ -f report.html ]]; then
            echo "Found report.html."
            echo "has-report=true" >> $GITHUB_OUTPUT
          fi
          echo "Conformance return code: ${CONFORMANCE_RC}"
          exit ${CONFORMANCE_RC}

      - name: Upload OCI conformance results as build artifact
        if: always() && steps.tests.outputs.has-report == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: oci-conformance-results-${{ matrix.go }}
          path: |
            ./report.html
            ./junit.xml
